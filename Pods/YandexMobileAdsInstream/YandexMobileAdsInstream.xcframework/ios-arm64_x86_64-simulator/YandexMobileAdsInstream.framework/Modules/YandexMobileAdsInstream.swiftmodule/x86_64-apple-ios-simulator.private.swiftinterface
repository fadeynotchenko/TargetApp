// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name YandexMobileAdsInstream
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import Swift
import UIKit
import UIKit.UIView
import _Concurrency
import _StringProcessing
@objc(YMAInstreamCustomClickConnector) public protocol InstreamCustomClickConnector {
  @objc func connectToLeaveApplicationEvent()
  @objc func connectToReturnToApplicationEvent()
}
@objc(YMAInstreamCustomClickHandler) public protocol InstreamCustomClickHandler {
  @objc func handleCustomClick(with url: Foundation.URL, instreamAdBreak: YandexMobileAdsInstream.InstreamAdBreak, customClickConnector: YandexMobileAdsInstream.InstreamCustomClickConnector)
}
@objc(YMAInstreamCustomClickable) public protocol InstreamCustomClickable {
  @objc func setCustomClickHandler(_ customClickHandler: YandexMobileAdsInstream.InstreamCustomClickHandler?)
}
@objc(YMAInroll) public protocol Inroll {
  @objc var delegate: YandexMobileAdsInstream.InstreamAdBreakDelegate? { get set }
  @objc var instreamAdBreak: YandexMobileAdsInstream.InstreamAdBreak { get }
  @objc func prepare(with adPlayer: YandexMobileAdsInstream.InstreamAdPlayer)
  @objc func play(with adView: YandexMobileAdsInstream.InstreamAdView)
  @objc func pause()
  @objc func resume()
  @objc func invalidate()
}
@objc(YMAInrollQueue) public protocol InrollQueue {
  @objc var count: Swift.Int { get }
  @objc func poll() -> YandexMobileAdsInstream.Inroll?
}
@_hasMissingDesignatedInitializers @objc(YMAInrollQueueProvider) @objcMembers public class InrollQueueProvider : ObjectiveC.NSObject {
  @objc convenience public init(ad: YandexMobileAdsInstream.InstreamAd)
  @objc public func queue() -> YandexMobileAdsInstream.InrollQueue
  @objc deinit
}
@objc(YMAInstreamAd) public protocol InstreamAd {
  @objc var adBreaks: [YandexMobileAdsInstream.InstreamAdBreak] { get }
}
@_hasMissingDesignatedInitializers @objc(YMAInstreamAdBinder) @objcMembers public class InstreamAdBinder : ObjectiveC.NSObject {
  @objc weak public var delegate: YandexMobileAdsInstream.InstreamAdBinderDelegate?
  @objc convenience public init(ad: YandexMobileAdsInstream.InstreamAd, adPlayer: YandexMobileAdsInstream.InstreamAdPlayer, videoPlayer: YandexMobileAdsInstream.VideoPlayer)
  @objc public func bind(with adView: YandexMobileAdsInstream.InstreamAdView)
  @objc public func unbind()
  @objc public func invalidateVideoPlayer()
  @objc public func invalidateAdPlayer()
  @objc public func prepareAd()
  @objc deinit
}
@objc(YMAInstreamAdBinderDelegate) public protocol InstreamAdBinderDelegate {
  @objc func instreamAdBinder(_ binder: YandexMobileAdsInstream.InstreamAdBinder, didComplete instreamAd: YandexMobileAdsInstream.InstreamAd)
  @objc func instreamAdBinder(_ binder: YandexMobileAdsInstream.InstreamAdBinder, didPrepare instreamAd: YandexMobileAdsInstream.InstreamAd)
  @objc func instreamAdBinder(_ binder: YandexMobileAdsInstream.InstreamAdBinder, didFailToPlay instreamAd: YandexMobileAdsInstream.InstreamAd, with error: Swift.Error)
}
@objc(YMAInstreamAdBreak) public protocol InstreamAdBreak {
  @objc var type: Swift.String { get }
  @objc var position: YandexMobileAdsInstream.InstreamAdBreakPosition { get }
}
@objc(YMAInstreamAdBreakDelegate) public protocol InstreamAdBreakDelegate {
  @objc func instreamAdBreakDidPrepare(_ adBreak: YandexMobileAdsInstream.InstreamAdBreak)
  @objc func instreamAdBreakDidStart(_ adBreak: YandexMobileAdsInstream.InstreamAdBreak)
  @objc func instreamAdBreakDidComplete(_ adBreak: YandexMobileAdsInstream.InstreamAdBreak)
  @objc func instreamAdBreakDidError(_ adBreak: YandexMobileAdsInstream.InstreamAdBreak)
}
@_hasMissingDesignatedInitializers @objc(YMAInstreamAdBreakPosition) @objcMembers public class InstreamAdBreakPosition : ObjectiveC.NSObject {
  @objc final public let type: Swift.String
  @objc final public let value: Swift.Int
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc(YMAInstreamAdBreakPositionType) @objcMembers public class InstreamAdBreakPositionType : ObjectiveC.NSObject {
  @objc public static let percents: Swift.String
  @objc public static let milliseconds: Swift.String
  @objc public static let position: Swift.String
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc(YMAInstreamAdBreakType) @objcMembers public class InstreamAdBreakType : ObjectiveC.NSObject {
  @objc public static let preroll: Swift.String
  @objc public static let midroll: Swift.String
  @objc public static let postroll: Swift.String
  @objc public static let inroll: Swift.String
  @objc public static let pauseroll: Swift.String
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc(YMAInstreamAdLoader) @objcMembers public class InstreamAdLoader : ObjectiveC.NSObject {
  @objc weak public var delegate: YandexMobileAdsInstream.InstreamAdLoaderDelegate?
  @objc override convenience dynamic public init()
  @objc public func loadInstreamAd(configuration: YandexMobileAdsInstream.InstreamAdRequestConfiguration)
  @objc deinit
}
@objc(YMAInstreamAdLoaderDelegate) public protocol InstreamAdLoaderDelegate {
  @objc func instreamAdLoader(_ instreamAdLoader: YandexMobileAdsInstream.InstreamAdLoader, didLoad ad: YandexMobileAdsInstream.InstreamAd)
  @objc func instreamAdLoader(_ instreamAdLoader: YandexMobileAdsInstream.InstreamAdLoader, didFailToLoad reason: Swift.String)
}
@objc(YMAInstreamAdRequestConfiguration) @objcMembers public class InstreamAdRequestConfiguration : ObjectiveC.NSObject {
  @objc final public let pageID: Swift.String
  @objc final public let categoryID: Swift.String
  @objc final public let parameters: [Swift.String : Swift.String]?
  @objc public init(pageID: Swift.String, categoryID: Swift.String = "0", parameters: [Swift.String : Swift.String]? = nil)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(YMAInstreamAdView) @_Concurrency.MainActor(unsafe) public class InstreamAdView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
public let kYMAInstreamAdsErrorDomain: Swift.String
@objc(YMAInstreamErrorCode) public enum InstreamErrorCode : Swift.Int {
  case badResponse = 0
  case videoPlayerError
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers @objc(YMAInstreamVideoAd) @objcMembers public class InstreamVideoAd : ObjectiveC.NSObject, YandexMobileAdsInstream.InstreamAd {
  @objc final public let adBreaks: [YandexMobileAdsInstream.InstreamAdBreak]
  @objc deinit
}
extension YandexMobileAdsInstream.InstreamVideoAd : YandexMobileAdsInstream.InstreamCustomClickable {
  @objc dynamic public func setCustomClickHandler(_ customClickHandler: YandexMobileAdsInstream.InstreamCustomClickHandler?)
}
@objc(YMAInstreamVideoAdsProvider) public protocol InstreamVideoAdsProvider {
  @objc var videoAds: [YandexMobileAdsInstream.VideoAd] { get }
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc(YMAMobileInstreamAds) @objcMembers public class MobileInstreamAds : ObjectiveC.NSObject {
  @objc public static func setControlsEnabled(_ enabled: Swift.Bool)
  @objc public static func setDiscardAdGroupOnSkipEnabled(_ enabled: Swift.Bool)
  @objc deinit
}
@objc(YMAAdPodInfo) public protocol AdPodInfo {
  @objc var adsCount: Swift.Int { get }
  @objc var adPosition: Swift.Int { get }
}
@objc(YMAInstreamAdSkipInfo) public protocol InstreamAdSkipInfo {
  @objc var isSkippable: Swift.Bool { get }
  @objc var skipOffset: Foundation.TimeInterval { get }
}
@objc(YMAMediaFile) public protocol MediaFile {
  @objc var adHeight: Swift.Int { get }
  @objc var adWidth: Swift.Int { get }
  @objc var url: Swift.String { get }
}
@objc(YMASkipInfo) public protocol SkipInfo {
  @objc var skipOffset: Foundation.TimeInterval { get }
}
@objc(YMAVideoAd) public protocol VideoAd {
  @objc var mediaFile: YandexMobileAdsInstream.MediaFile { get }
  @objc var adPodInfo: YandexMobileAdsInstream.AdPodInfo { get }
  @objc var skipInfo: YandexMobileAdsInstream.SkipInfo? { get }
  @objc var adInfo: Swift.String? { get }
}
@objc(YMAPauseroll) public protocol Pauseroll {
  @objc var delegate: YandexMobileAdsInstream.InstreamAdBreakDelegate? { get set }
  @objc var instreamAdBreak: YandexMobileAdsInstream.InstreamAdBreak { get }
  @objc func prepare(with adPlayer: YandexMobileAdsInstream.InstreamAdPlayer)
  @objc func play(with adView: YandexMobileAdsInstream.InstreamAdView)
  @objc func pause()
  @objc func resume()
  @objc func invalidate()
}
@objc(YMAPauserollQueue) public protocol PauserollQueue {
  @objc var count: Swift.Int { get }
  @objc func poll() -> YandexMobileAdsInstream.Pauseroll?
}
@_hasMissingDesignatedInitializers @objc(YMAPauserollQueueProvider) @objcMembers public class PauserollQueueProvider : ObjectiveC.NSObject {
  @objc convenience public init(ad: YandexMobileAdsInstream.InstreamAd)
  @objc public func queue() -> YandexMobileAdsInstream.PauserollQueue
  @objc deinit
}
@objc(YMAInstreamAdPlayer) public protocol InstreamAdPlayer {
  @objc weak var delegate: YandexMobileAdsInstream.InstreamAdPlayerDelegate? { get set }
  @objc var isPlaying: Swift.Bool { get }
  @objc var duration: Foundation.TimeInterval { get }
  @objc var position: Foundation.TimeInterval { get }
  @objc func prepareAd(with videoAd: YandexMobileAdsInstream.VideoAd)
  @objc func playAd()
  @objc func pauseAd()
  @objc func resumeAd()
  @objc func stopAd()
  @objc func setVolume(_ level: Swift.Double)
}
@objc(YMAInstreamAdPlayerDelegate) public protocol InstreamAdPlayerDelegate {
  @objc func instreamAdPlayer(_ player: YandexMobileAdsInstream.InstreamAdPlayer, didPrepare videoAd: YandexMobileAdsInstream.VideoAd)
  @objc func instreamAdPlayer(_ player: YandexMobileAdsInstream.InstreamAdPlayer, didStart videoAd: YandexMobileAdsInstream.VideoAd)
  @objc func instreamAdPlayer(_ player: YandexMobileAdsInstream.InstreamAdPlayer, didPause videoAd: YandexMobileAdsInstream.VideoAd)
  @objc func instreamAdPlayer(_ player: YandexMobileAdsInstream.InstreamAdPlayer, didResume videoAd: YandexMobileAdsInstream.VideoAd)
  @objc func instreamAdPlayer(_ player: YandexMobileAdsInstream.InstreamAdPlayer, didComplete videoAd: YandexMobileAdsInstream.VideoAd)
  @objc func instreamAdPlayer(_ player: YandexMobileAdsInstream.InstreamAdPlayer, didStop videoAd: YandexMobileAdsInstream.VideoAd)
  @objc func instreamAdPlayer(_ player: YandexMobileAdsInstream.InstreamAdPlayer, didFailVideoAd videoAd: YandexMobileAdsInstream.VideoAd, withError error: YandexMobileAdsInstream.InstreamAdPlayerError)
  @objc func instreamAdPlayer(_ player: YandexMobileAdsInstream.InstreamAdPlayer, videoAd: YandexMobileAdsInstream.VideoAd, didUpdated volume: Swift.Double)
}
@objc(YMAInstreamAdPlayerError) public class InstreamAdPlayerError : ObjectiveC.NSObject {
  final public let reason: YandexMobileAdsInstream.InstreamAdPlayerErrorReason
  final public let underlyingError: Swift.Error
  public init(reason: YandexMobileAdsInstream.InstreamAdPlayerErrorReason, underlyingError: Swift.Error)
  @objc deinit
}
@objc(YMAInstreamAdPlayerErrorReason) public enum InstreamAdPlayerErrorReason : Swift.Int, Swift.CaseIterable {
  case invalidFile
  case fileNotFound
  case timedOut
  case netwrokUnavailable
  case unsupportedFileFormat
  case unsupportedCodec
  case unknown
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [YandexMobileAdsInstream.InstreamAdPlayerErrorReason]
  public typealias RawValue = Swift.Int
  public static var allCases: [YandexMobileAdsInstream.InstreamAdPlayerErrorReason] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
@objc(YMAVideoPlayer) public protocol VideoPlayer {
  @objc weak var delegate: YandexMobileAdsInstream.VideoPlayerDelegate? { get set }
  @objc var position: Foundation.TimeInterval { get }
  @objc var duration: Foundation.TimeInterval { get }
  @objc func prepareVideo()
  @objc func pauseVideo()
  @objc func resumeVideo()
}
@objc(YMAVideoPlayerDelegate) public protocol VideoPlayerDelegate {
  @objc func videoPlayerDidPrepare(_ videoPlayer: YandexMobileAdsInstream.VideoPlayer)
  @objc func videoPlayerDidComplete(_ videoPlayer: YandexMobileAdsInstream.VideoPlayer)
  @objc func videoPlayerDidResume(_ videoPlayer: YandexMobileAdsInstream.VideoPlayer)
  @objc func videoPlayerDidPause(_ videoPlayer: YandexMobileAdsInstream.VideoPlayer)
  @objc func videoPlayerDidFail(_ videoPlayer: YandexMobileAdsInstream.VideoPlayer)
}
extension YandexMobileAdsInstream.InstreamAdPlayerErrorReason : Swift.Equatable {}
extension YandexMobileAdsInstream.InstreamAdPlayerErrorReason : Swift.Hashable {}
extension YandexMobileAdsInstream.InstreamAdPlayerErrorReason : Swift.RawRepresentable {}
extension YandexMobileAdsInstream.InstreamErrorCode : Swift.Equatable {}
extension YandexMobileAdsInstream.InstreamErrorCode : Swift.Hashable {}
extension YandexMobileAdsInstream.InstreamErrorCode : Swift.RawRepresentable {}
